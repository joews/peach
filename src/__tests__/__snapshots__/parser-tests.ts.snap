// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`
a =
  (1) => a,
  (1) => 2
 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Def",
      "name": "a",
      "value": Object {
        "clauses": Array [
          Object {
            "body": Array [
              Object {
                "kind": "Identifier",
                "name": "a",
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
          },
          Object {
            "body": Array [
              Object {
                "kind": "Number",
                "value": 2,
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
          },
        ],
        "kind": "Function",
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`((((())))) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [],
    },
  ],
  "kind": "Program",
}
`;

exports[`((1, 2) => 1)() 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [],
      "fn": Object {
        "clauses": Array [
          Object {
            "body": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
              Object {
                "kind": "Number",
                "value": 2,
              },
            ],
          },
        ],
        "kind": "Function",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`() 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [],
    },
  ],
  "kind": "Program",
}
`;

exports[`([true|tail] => 1) 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
          ],
          "pattern": Array [
            Object {
              "head": Object {
                "kind": "Boolean",
                "value": true,
              },
              "kind": "DestructuredArray",
              "tail": Object {
                "kind": "Identifier",
                "name": "tail",
              },
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`(1, (1 + 2, ((3,),)), (), (2), (3,)) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Tuple",
          "values": Array [
            Object {
              "kind": "BinaryOperator",
              "left": Object {
                "kind": "Number",
                "value": 1,
              },
              "operator": "+",
              "right": Object {
                "kind": "Number",
                "value": 2,
              },
            },
            Object {
              "kind": "Tuple",
              "values": Array [
                Object {
                  "kind": "Tuple",
                  "values": Array [
                    Object {
                      "kind": "Number",
                      "value": 3,
                    },
                  ],
                },
              ],
            },
          ],
        },
        Object {
          "kind": "Tuple",
          "values": Array [],
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
        Object {
          "kind": "Tuple",
          "values": Array [
            Object {
              "kind": "Number",
              "value": 3,
            },
          ],
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`(1, 2, 3,) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
        Object {
          "kind": "Number",
          "value": 3,
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`(1,) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`(1,2) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Tuple",
      "values": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`(a) => 1 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Identifier",
              "name": "a",
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`(a, b) => {
  1
  2
} 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
            Object {
              "kind": "Number",
              "value": 2,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Identifier",
              "name": "a",
            },
            Object {
              "kind": "Identifier",
              "name": "b",
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`(a, b) => {
  1
  2
}, (c, d) => true 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
            Object {
              "kind": "Number",
              "value": 2,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Identifier",
              "name": "a",
            },
            Object {
              "kind": "Identifier",
              "name": "b",
            },
          ],
        },
        Object {
          "body": Array [
            Object {
              "kind": "Boolean",
              "value": true,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Identifier",
              "name": "c",
            },
            Object {
              "kind": "Identifier",
              "name": "d",
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`(test) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Identifier",
      "name": "test",
    },
  ],
  "kind": "Program",
}
`;

exports[`(true => 1) 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Boolean",
              "value": true,
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`[] 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Array",
      "values": Array [],
    },
  ],
  "kind": "Program",
}
`;

exports[`[1,2,3] 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Array",
      "values": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
        Object {
          "kind": "Number",
          "value": 3,
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`1 * 2 + (bob - [3]) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Number",
          "value": 1,
        },
        "operator": "*",
        "right": Object {
          "kind": "Number",
          "value": 2,
        },
      },
      "operator": "+",
      "right": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Identifier",
          "name": "bob",
        },
        "operator": "-",
        "right": Object {
          "kind": "Array",
          "values": Array [
            Object {
              "kind": "Number",
              "value": 3,
            },
          ],
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`1 * 2 + 2 - 3 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Number",
          "value": 1,
        },
        "operator": "*",
        "right": Object {
          "kind": "Number",
          "value": 2,
        },
      },
      "operator": "+",
      "right": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Number",
          "value": 2,
        },
        "operator": "-",
        "right": Object {
          "kind": "Number",
          "value": 3,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`1 * 2/( 2 % 3) 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "Number",
        "value": 1,
      },
      "operator": "*",
      "right": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Number",
          "value": 2,
        },
        "operator": "/",
        "right": Object {
          "kind": "BinaryOperator",
          "left": Object {
            "kind": "Number",
            "value": 2,
          },
          "operator": "%",
          "right": Object {
            "kind": "Number",
            "value": 3,
          },
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`1 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Number",
      "value": 1,
    },
  ],
  "kind": "Program",
}
`;

exports[`2 * (1 + a < b) < 3 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Number",
          "value": 2,
        },
        "operator": "*",
        "right": Object {
          "kind": "BinaryOperator",
          "left": Object {
            "kind": "BinaryOperator",
            "left": Object {
              "kind": "Number",
              "value": 1,
            },
            "operator": "+",
            "right": Object {
              "kind": "Identifier",
              "name": "a",
            },
          },
          "operator": "<",
          "right": Object {
            "kind": "Identifier",
            "name": "b",
          },
        },
      },
      "operator": "<",
      "right": Object {
        "kind": "Number",
        "value": 3,
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a < if (a) 1 else 2 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "operator": "<",
      "right": Object {
        "condition": Object {
          "kind": "Identifier",
          "name": "a",
        },
        "elseBranch": Object {
          "kind": "Number",
          "value": 2,
        },
        "ifBranch": Object {
          "kind": "Number",
          "value": 1,
        },
        "kind": "If",
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a = \`two\` 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Def",
      "name": "a",
      "value": Object {
        "kind": "String",
        "value": "two",
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a = b < 2 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Def",
      "name": "a",
      "value": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Identifier",
          "name": "b",
        },
        "operator": "<",
        "right": Object {
          "kind": "Number",
          "value": 2,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a == 2 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "operator": "==",
      "right": Object {
        "kind": "Number",
        "value": 2,
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a == b <=> true 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "BinaryOperator",
      "left": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "operator": "==",
      "right": Object {
        "kind": "BinaryOperator",
        "left": Object {
          "kind": "Identifier",
          "name": "b",
        },
        "operator": "<=>",
        "right": Object {
          "kind": "Boolean",
          "value": true,
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a => 1 1`] = `
Object {
  "expressions": Array [
    Object {
      "clauses": Array [
        Object {
          "body": Array [
            Object {
              "kind": "Number",
              "value": 1,
            },
          ],
          "pattern": Array [
            Object {
              "kind": "Identifier",
              "name": "a",
            },
          ],
        },
      ],
      "kind": "Function",
    },
  ],
  "kind": "Program",
}
`;

exports[`a() 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [],
      "fn": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`a(b) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "Identifier",
          "name": "b",
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`a(b)(c) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "Identifier",
          "name": "c",
        },
      ],
      "fn": Object {
        "args": Array [
          Object {
            "kind": "Identifier",
            "name": "b",
          },
        ],
        "fn": Object {
          "kind": "Identifier",
          "name": "a",
        },
        "kind": "Call",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`a.b 1`] = `
Object {
  "expressions": Array [
    Object {
      "computed": false,
      "kind": "Member",
      "name": Object {
        "kind": "Identifier",
        "name": "b",
      },
      "source": Object {
        "kind": "Identifier",
        "name": "a",
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a.b.c 1`] = `
Object {
  "expressions": Array [
    Object {
      "computed": false,
      "kind": "Member",
      "name": Object {
        "kind": "Identifier",
        "name": "c",
      },
      "source": Object {
        "computed": false,
        "kind": "Member",
        "name": Object {
          "kind": "Identifier",
          "name": "b",
        },
        "source": Object {
          "kind": "Identifier",
          "name": "a",
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a.b[0] 1`] = `
Object {
  "expressions": Array [
    Object {
      "computed": true,
      "kind": "Member",
      "name": Object {
        "kind": "Number",
        "value": 0,
      },
      "source": Object {
        "computed": false,
        "kind": "Member",
        "name": Object {
          "kind": "Identifier",
          "name": "b",
        },
        "source": Object {
          "kind": "Identifier",
          "name": "a",
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`a[b][0] 1`] = `
Object {
  "expressions": Array [
    Object {
      "computed": true,
      "kind": "Member",
      "name": Object {
        "kind": "Number",
        "value": 0,
      },
      "source": Object {
        "computed": true,
        "kind": "Member",
        "name": Object {
          "kind": "Identifier",
          "name": "b",
        },
        "source": Object {
          "kind": "Identifier",
          "name": "a",
        },
      },
    },
  ],
  "kind": "Program",
}
`;

exports[`fibonacci.peach 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Def",
      "name": "fib",
      "value": Object {
        "clauses": Array [
          Object {
            "body": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Number",
                "value": 0,
              },
            ],
          },
          Object {
            "body": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
          },
          Object {
            "body": Array [
              Object {
                "kind": "BinaryOperator",
                "left": Object {
                  "args": Array [
                    Object {
                      "kind": "BinaryOperator",
                      "left": Object {
                        "kind": "Identifier",
                        "name": "x",
                      },
                      "operator": "-",
                      "right": Object {
                        "kind": "Number",
                        "value": 1,
                      },
                    },
                  ],
                  "fn": Object {
                    "kind": "Identifier",
                    "name": "fib",
                  },
                  "kind": "Call",
                },
                "operator": "+",
                "right": Object {
                  "args": Array [
                    Object {
                      "kind": "BinaryOperator",
                      "left": Object {
                        "kind": "Identifier",
                        "name": "x",
                      },
                      "operator": "-",
                      "right": Object {
                        "kind": "Number",
                        "value": 2,
                      },
                    },
                  ],
                  "fn": Object {
                    "kind": "Identifier",
                    "name": "fib",
                  },
                  "kind": "Call",
                },
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Identifier",
                "name": "x",
              },
            ],
          },
        ],
        "kind": "Function",
      },
    },
    Object {
      "args": Array [
        Object {
          "kind": "Identifier",
          "name": "fib",
        },
        Object {
          "kind": "Array",
          "values": Array [
            Object {
              "kind": "Number",
              "value": 0,
            },
            Object {
              "kind": "Number",
              "value": 1,
            },
            Object {
              "kind": "Number",
              "value": 2,
            },
            Object {
              "kind": "Number",
              "value": 3,
            },
            Object {
              "kind": "Number",
              "value": 4,
            },
            Object {
              "kind": "Number",
              "value": 5,
            },
            Object {
              "kind": "Number",
              "value": 6,
            },
            Object {
              "kind": "Number",
              "value": 7,
            },
            Object {
              "kind": "Number",
              "value": 8,
            },
            Object {
              "kind": "Number",
              "value": 9,
            },
            Object {
              "kind": "Number",
              "value": 10,
            },
          ],
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "map",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`if (a) 1 else 2 1`] = `
Object {
  "expressions": Array [
    Object {
      "condition": Object {
        "kind": "Identifier",
        "name": "a",
      },
      "elseBranch": Object {
        "kind": "Number",
        "value": 2,
      },
      "ifBranch": Object {
        "kind": "Number",
        "value": 1,
      },
      "kind": "If",
    },
  ],
  "kind": "Program",
}
`;

exports[`str.peach 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Array",
      "values": Array [
        Object {
          "kind": "String",
          "value": "str.peach before escape\\\\\`and after!",
        },
        Object {
          "kind": "String",
          "value": "hey 🌟",
        },
        Object {
          "kind": "String",
          "value": "multi
      line
  string",
        },
        Object {
          "kind": "String",
          "value": "such\\\\\\\\\\\\\\\\\\\\\`escape",
        },
        Object {
          "kind": "String",
          "value": "with	tab",
        },
        Object {
          "kind": "String",
          "value": "new
line",
        },
        Object {
          "kind": "String",
          "value": "back\\\\slash",
        },
        Object {
          "kind": "String",
          "value": "back\\\\\\\\to\\\\back",
        },
      ],
    },
  ],
  "kind": "Program",
}
`;

exports[`t() 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [],
      "fn": Object {
        "kind": "Identifier",
        "name": "t",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`t(\`1\`, (2), (x) => 3) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "String",
          "value": "1",
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
        Object {
          "clauses": Array [
            Object {
              "body": Array [
                Object {
                  "kind": "Number",
                  "value": 3,
                },
              ],
              "pattern": Array [
                Object {
                  "kind": "Identifier",
                  "name": "x",
                },
              ],
            },
          ],
          "kind": "Function",
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "t",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`t(1, 2) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "t",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`tail-recursion.peach 1`] = `
Object {
  "expressions": Array [
    Object {
      "kind": "Def",
      "name": "factorial",
      "value": Object {
        "clauses": Array [
          Object {
            "body": Array [
              Object {
                "kind": "Identifier",
                "name": "n",
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Identifier",
                "name": "n",
              },
              Object {
                "kind": "Number",
                "value": 1,
              },
            ],
          },
          Object {
            "body": Array [
              Object {
                "args": Array [
                  Object {
                    "kind": "BinaryOperator",
                    "left": Object {
                      "kind": "Identifier",
                      "name": "n",
                    },
                    "operator": "*",
                    "right": Object {
                      "kind": "Identifier",
                      "name": "x",
                    },
                  },
                  Object {
                    "kind": "BinaryOperator",
                    "left": Object {
                      "kind": "Identifier",
                      "name": "x",
                    },
                    "operator": "-",
                    "right": Object {
                      "kind": "Number",
                      "value": 1,
                    },
                  },
                ],
                "fn": Object {
                  "kind": "Identifier",
                  "name": "factorial",
                },
                "kind": "Call",
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Identifier",
                "name": "n",
              },
              Object {
                "kind": "Identifier",
                "name": "x",
              },
            ],
          },
        ],
        "kind": "Function",
      },
    },
    Object {
      "kind": "Def",
      "name": "f",
      "value": Object {
        "clauses": Array [
          Object {
            "body": Array [
              Object {
                "args": Array [
                  Object {
                    "kind": "Number",
                    "value": 1,
                  },
                  Object {
                    "kind": "Identifier",
                    "name": "n",
                  },
                ],
                "fn": Object {
                  "kind": "Identifier",
                  "name": "factorial",
                },
                "kind": "Call",
              },
            ],
            "pattern": Array [
              Object {
                "kind": "Identifier",
                "name": "n",
              },
            ],
          },
        ],
        "kind": "Function",
      },
    },
    Object {
      "args": Array [
        Object {
          "kind": "Number",
          "value": 32768,
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "f",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`test(1) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "test",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;

exports[`test(1, 2) 1`] = `
Object {
  "expressions": Array [
    Object {
      "args": Array [
        Object {
          "kind": "Number",
          "value": 1,
        },
        Object {
          "kind": "Number",
          "value": 2,
        },
      ],
      "fn": Object {
        "kind": "Identifier",
        "name": "test",
      },
      "kind": "Call",
    },
  ],
  "kind": "Program",
}
`;
